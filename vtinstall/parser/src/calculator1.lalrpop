use std::str::FromStr;
use crate::command::Command;

grammar;



pub Commands: Vec<Command> = {
    <mut v:(<Line> Newline)*> <e:Line?> => match e { 
        None => v,
        Some(e) => {
            v.push(e);
            v
        }
    }
}

Line : Command = Whitespace? <instruction:Instruction> <args:(Whitespace <Argument>)*> Whitespace? => Command {<>};


Instruction: String = Word => String::from(<>);

Argument : String = {
    Word => String::from(<>),
    <w:SingleQuotedWord> => String::from(&w[1..w.len()-1])
}


match{
    r"[\n\r]+" => Newline,
}else{
    r#"'[^\n\r']*'"# => SingleQuotedWord,
}else{
    r#"[^\n\r\t ]+"# => Word,
}else{
    r"[\t ]+" => Whitespace,
    r"#[^\n\r]*[\n\r]*" => { }, //skip comments
    _
}